# Araç Bileşenleri Üzerinde K-Means ve DBSCAN ile Kümeleme ve PCA

Bu proje, araç bileşenlerine ait ağırlık ve performans verilerini kullanarak K-Means ve DBSCAN kümeleme algoritmalarını uygular ve PCA (Principal Component Analysis) ile boyut indirgeme işlemi yapar. Sonuçlar matplotlib ile görselleştirilir.

## İçerik
- Kullanılan Kütüphaneler
- Proje Adımları
  - Verilerin Normalizasyonu
  - K-Means ile Kümeleme
  - DBSCAN ile Kümeleme
  - PCA ile Boyut İndirgeme ve Görselleştirme
  - Sonuçlar
- Kurulum ve Çalıştırma

## Kullanılan Kütüphaneler
Bu projede aşağıdaki Python kütüphaneleri kullanılmıştır:

- numpy
- pandas
- scikit-learn
- matplotlib

## Proje Adımları

### 1. Verilerin Normalizasyonu
Veriler, farklı ölçeklere sahip olduğundan, normalizasyon yapılmıştır. Bu işlemde StandardScaler kullanılmıştır. Veriler scaled_data adlı değişkene aktarılmıştır.

### 2. K-Means ile Kümeleme
K-Means algoritması ile veri seti 2 kümeye ayrılmıştır. Küme etiketleri, K-means_Labels sütunu ile DataFrame'e eklenmiştir.

### 3. DBSCAN ile Kümeleme
DBSCAN algoritması da uygulanmış ve sonuçlar DBSCAN_Labels sütunu ile DataFrame'e eklenmiştir.

### 4. PCA ile Boyut İndirgeme ve Görselleştirme
PCA kullanılarak veriler 2 bileşene indirgenmiştir. Bu bileşenler görselleştirilerek kümelerin ayrımı gözlemlenmiştir.

Verilerin görselleştirilmesi matplotlib ile yapılmıştır.

### 5. Sonuçlar
Sonuç olarak, K-Means ve DBSCAN ile kümeleme sonuçları gösterilir. Kümeleme sonuçları ve diğer özellikler DataFrame'de görüntülenir.

## Kurulum ve Çalıştırma
Bu projeyi çalıştırmak için aşağıdaki adımları takip edebilirsiniz:

### Adım 1: Gerekli Kütüphanelerin Kurulumu

numpy, pandas, scikit-learn, ve matplotlib kütüphaneleri kurulmalıdır.

### Adım 2: Projeyi Çalıştırma
Projeyi çalıştırmak için Python dosyasını çalıştırabilirsiniz.

### Adım 3: Sonuçları İnceleme
Veriler başarıyla kümelemeden geçirildiğinde ve PCA ile boyutları indirildiğinde, görsel çıktıları inceleyebilirsiniz. Ayrıca kümeleme sonuçları DataFrame üzerinde görüntülenir.
